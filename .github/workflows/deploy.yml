name: deploy

on:
  workflow_run:
    workflows: [ build ]
    types: [ completed ]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      # Checkout develop branch
      - uses: actions/checkout@v3
        with:
          ref: develop
      # Stop project, if it is currently running
      - uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.ESO_HOST }}
          username: ${{ secrets.ESO_USERNAME }}
          key: ${{ secrets.ESO_SSH_KEY }}
          script: |
            docker compose -f /home/${{ secrets.ESO_USERNAME }}/es-outfitter/docker-compose.prod.yml down || true
      # Copy necessary files to server
      - uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.ESO_HOST }}
          username: ${{ secrets.ESO_USERNAME }}
          key: ${{ secrets.ESO_SSH_KEY }}
          source: "docker/docker-compose.prod.yml,docker/.env.prod,docker/cron.sh,docker/crontab"
          target: "/home/${{ secrets.ESO_USERNAME }}/es-outfitter"
          strip_components: 1
          overwrite: true
      # Add environment variables to .env file or export them directly
      # Add crontab entry
      # Pull latest images
      # Start project
      - uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.ESO_HOST }}
          username: ${{ secrets.ESO_USERNAME }}
          key: ${{ secrets.ESO_SSH_KEY }}
          script: |
            echo SECRET_KEY="'${{ secrets.DJANGO_SECRET_KEY }}'" >> /home/${{ secrets.ESO_USERNAME }}/es-outfitter/.env.prod
            echo DJANGO_ALLOWED_HOSTS=${{ secrets.ESO_HOST }} >> /home/${{ secrets.ESO_USERNAME }}/es-outfitter/.env.prod
            export EMAIL=${{ secrets.CERTBOT_EMAIL }}
            export DOMAIN=${{ secrets.ESO_HOST }}
            crontab /home/${{ secrets.ESO_USERNAME }}/es-outfitter/crontab
            docker pull thorndeux/es-outfitter
            docker pull thorndeux/eso-nginx
            docker compose -f /home/${{ secrets.ESO_USERNAME }}/es-outfitter/docker-compose.prod.yml up -d
